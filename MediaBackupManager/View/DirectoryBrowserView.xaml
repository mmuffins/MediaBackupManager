<UserControl x:Class="MediaBackupManager.View.DirectoryBrowserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MediaBackupManager.View"
             xmlns:viewmodel="clr-namespace:MediaBackupManager.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="100" 
             Unloaded="UserControl_Unloaded">
    <Control.Resources>
        <!--Converters-->
        <local:ByteToHumanReadableConverter x:Key="ByteToHuman" />
        <local:TypeToStringConverter x:Key="TypeToString" />
        
        <Style TargetType="TreeView">
            <Setter Property="BorderThickness" Value="0,0,1,0" />
        </Style>

        <!--GridView Resources-->
        <Style TargetType="ListView">
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <!--Compositecollections don't have support for sorting/filtering, use workaround instead-->
        <!--<CollectionViewSource x:Key="DirectoryFileNodes" Source="{Binding Path=CurrentDirectory.FileNodes}"/>
        <CollectionViewSource x:Key="DirectorySubDirs" Source="{Binding Path=CurrentDirectory.SubDirectories}"/>
        <CompositeCollection x:Key="CombinedCollection">
            <CollectionContainer Collection="{Binding Source={StaticResource DirectorySubDirs}}" />
            <CollectionContainer Collection="{Binding Source={StaticResource DirectoryFileNodes}}" />
        </CompositeCollection>-->

    </Control.Resources>
    
    <Grid x:Name="LayoutRoot" Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="40" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="50" Width="20*"/>
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="80*" />
        </Grid.ColumnDefinitions>

        <!--Command Bar-->
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
            <Button x:Name="btnShowBackupSetView" Content="Home" Command="{Binding ShowBackupSetOverviewCommand}" Style="{DynamicResource HeaderButton}"  />
        </StackPanel>

        <Separator Grid.Row="0"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Background="#FF303030" />

        <!--Show files without backup-->
        <CheckBox x:Name="ToggleTreeViewHighlights" Grid.Row="1" Grid.Column="0"  Content="Show files without backup" 
                  IsChecked="{Binding HighlightMissingBackupFiles}" VerticalAlignment="Center" />

        <Separator Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Background="#FF303030" />
        
        <!--Directory Tree-->
        <TreeView x:Name="treeDirectory" Grid.Row="2"  Grid.Column="0" Margin="2" MinWidth="50"
                  ItemsSource="{Binding Path=Index.BackupSets}"
                  SelectedItemChanged="treeDirectory_SelectedItemChanged" >
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFAFECFF" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FF303030" />
            </TreeView.Resources>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type viewmodel:FileDirectoryViewModel}" 
                                          ItemsSource="{Binding RootDirectory.SubDirectories}" >
                    <TextBlock Text="{Binding Label}" />
                    <HierarchicalDataTemplate.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type viewmodel:FileDirectoryViewModel}"
                                                  ItemsSource="{Binding SubDirectories}" >
                            <TextBlock Text="{Binding Name}" Height="20" 
                                      />
                        </HierarchicalDataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewStyle}"> 
                    <Setter Property="IsExpanded" Value="{Binding TreeViewIsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding TreeViewIsSelected, Mode=TwoWay}" />
                    <Style.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Grid.ColumnSpan" Value="2" />
                        </Style>
                    </Style.Resources>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

        <GridSplitter Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch"  Background="Transparent"/>

        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--Breadcrumb Navigation-->
            <ListView Grid.Row="0" Grid.Column="0"  VerticalAlignment="Center"
                          ItemsSource="{Binding Path=CurrentDirectory.BreadCrumbList}">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style TargetType="{x:Type StackPanel}">
                                <EventSetter Event="MouseUp" Handler="BreadcrumbBar_MouseUp" />
                            </Style>
                        </DataTemplate.Resources>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:Name="dirDelimiter" Text=">" />
                            <TextBlock Text="{Binding Path=Name}" TextDecorations="Underline" />
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                <Setter TargetName="dirDelimiter" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!--File Search-->
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                <TextBox
                     Text="{Binding SearchBarText, Delay=200, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Height" Value="25" />
                            <Setter Property="Width" Value="160" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Margin" Value="0,0,2,0" />
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Path Style="{StaticResource appbar_magnify}" Height="18" Width="18" Fill="#FF303030"/>
            </StackPanel>

        </Grid>
        <DockPanel Grid.Row="1" Grid.Column="2">

        </DockPanel>
        <ListView Grid.Row="2" Grid.Column="2" x:Name="gridFiles" Margin="2"
                  SelectedItem="{Binding Path=SelectedFileGridItem}" 
                  GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler" >
            <ListView.Style>
                <Style TargetType="ListView" >
                    <Setter Property="BorderThickness" Value="0,0,0,0" />

                    <!--Show search results if ShowSearchResults is true-->
                    <Setter Property="ItemsSource" Value="{Binding Path=CurrentDirectory.ChildElements}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowSearchResults}" Value="True">
                            <Setter Property="ItemsSource" Value="{Binding SearchResults}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource FileGridStyle}">
                    <EventSetter Event="MouseDoubleClick" Handler="GridFiles_MouseDoubleClick" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn Header="Extension" DisplayMemberBinding="{Binding Extension}" />
                    <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Path=Hash.Length, Converter={StaticResource ByteToHuman}}" />
                    <GridViewColumn Header="Creation Time" DisplayMemberBinding="{Binding Path=Hash.CreationTime}" />
                    <GridViewColumn Header="Last Write Time" DisplayMemberBinding="{Binding Path=Hash.LastWriteTime}" />
                    <GridViewColumn Header="Checksum" DisplayMemberBinding="{Binding Checksum}" />
                    <!--<GridViewColumn Header="Directory" DisplayMemberBinding="{Binding FullName}" />-->
                    <!--<GridViewColumn Header="Backup Status" DisplayMemberBinding="{Binding BackupStatus}" />-->
                    <GridViewColumn Header="Backup Count" DisplayMemberBinding="{Binding Path=Hash.BackupCount}" />
                    <!--<GridViewColumn Header="Node Count" DisplayMemberBinding="{Binding Path=Hash.NodeCount}" />-->
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
