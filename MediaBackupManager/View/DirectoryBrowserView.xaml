<UserControl x:Class="MediaBackupManager.View.DirectoryBrowserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MediaBackupManager.View"
             xmlns:viewmodel="clr-namespace:MediaBackupManager.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="100" 
             Unloaded="UserControl_Unloaded">
    <Control.Resources>
        <!--Treeview Resources-->
        <Style TargetType="TreeViewItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Name}" Value="Fiddler">
                    <Setter Property="Foreground" Value="BlueViolet" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TreeViewItem" x:Key="BackupStatusColor">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=HasMultipleBackups}" Value="False">
                    <Setter Property="Foreground" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--GridView Resources-->
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <EventSetter Event="MouseDoubleClick" Handler="GridFiles_MouseDoubleClick" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=HasMultipleBackups}" Value="False">
                    <Setter Property="Foreground" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <CollectionViewSource x:Key="DirectoryFileNodes" Source="{Binding Path=CurrentDirectory.FileNodes}"/>
        <CollectionViewSource x:Key="DirectorySubDirs" Source="{Binding Path=CurrentDirectory.SubDirectories}"/>
        <CompositeCollection x:Key="CombinedCollection">
            <CollectionContainer Collection="{Binding Source={StaticResource DirectorySubDirs}}" />
            <CollectionContainer Collection="{Binding Source={StaticResource DirectoryFileNodes}}" />
        </CompositeCollection>

    </Control.Resources>
    
    <Grid x:Name="RootGrid" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="50" MaxWidth="250" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <!--Command Bar-->
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" Height="30">
            <Button x:Name="btnClearData" Content="Clear" Command="{Binding ClearDataCommand}" />
            <Button x:Name="btnLoadData" Content="Load DB" Command="{Binding LoadData}" />
            <Button x:Name="btnScanFiles" Content="Scan Test 1" Command="{Binding LoadAdditionalData}" />
            <Button x:Name="btnScanAdditional" Content="Scan Test 2" Command="{Binding ScanNewData}" />
            <Button x:Name="btnDeleteAdditional" Content="Delete Test 2" Command="{Binding RemoveNewData}" />
            <Button x:Name="btnCreateBackupSet" Content="Index Directory" Command="{Binding ShowCreateBackupSetViewCommand}" />
            <Button x:Name="btnRemoveBackupSet" Content="Remove Directory" Command="{Binding RemoveBackupSetCommand}" />
            <Button x:Name="btnShowExclusionList" Content="File Exclusions" Command="{Binding ShowExclusionOverlayCommand}" />
            <Button x:Name="btnShowBackupSetView" Content="Backup Sets" Command="{Binding ShowBackupSetOverviewCommand}" />
        </StackPanel>

        <TreeView x:Name="treeDirectory" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Margin="2" MinWidth="50" MaxWidth="250"
                  ItemsSource="{Binding Path=Index.BackupSets}"
                  SelectedItemChanged="treeDirectory_SelectedItemChanged">
            <TreeView.Resources>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding TreeViewIsExpanded}" />
                    <Setter Property="IsSelected" Value="{Binding TreeViewIsSelected}" />
                    <!--<Style.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>-->
                </Style>
                <HierarchicalDataTemplate DataType="{x:Type viewmodel:BackupSetViewModel}" 
                                          ItemsSource="{Binding Path=RootDirectory.SubDirectories}">
                    <TreeViewItem Header="{Binding Path=Label}" IsExpanded="{Binding TreeViewIsExpanded}"/>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type viewmodel:FileDirectoryViewModel}" 
                                          ItemsSource="{Binding Path=SubDirectories}">
                    <TreeViewItem Header="{Binding Path=Name}" Style="{StaticResource BackupStatusColor}" IsExpanded="{Binding TreeViewIsExpanded}"/>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>

        <DockPanel Grid.Row="1" Grid.Column="1">
            <!--Breadcrumb Navigation-->
            <ItemsControl DockPanel.Dock="Left" 
                          ItemsSource="{Binding Path=CurrentDirectory.BreadCrumbList}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style TargetType="{x:Type StackPanel}">
                                <EventSetter Event="MouseUp" Handler="BreadcrumbBar_MouseUp" />
                            </Style>
                        </DataTemplate.Resources>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text=">" />
                            <TextBlock Text="{Binding Path=Name}" />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!--File Search-->
            <TextBox DockPanel.Dock="Right" 
                     Text="{Binding SearchBarText, Delay=200, UpdateSourceTrigger=PropertyChanged}"></TextBox>
        </DockPanel>
        <ListView Grid.Row="2" Grid.Column="1" x:Name="gridFiles" Margin="2"
                  SelectedItem="{Binding Path=SelectedFileGridItem}">
            <ListView.Style>
                <Style TargetType="ListView">
                    <Setter Property="ItemsSource" Value="{StaticResource CombinedCollection}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowSearchResults}" Value="True">
                            <Setter Property="ItemsSource" Value="{Binding SearchResults}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn Header="Extension" DisplayMemberBinding="{Binding Extension}" />
                    <GridViewColumn Header="Checksum" DisplayMemberBinding="{Binding Checksum}" />
                    <GridViewColumn Header="Directory" DisplayMemberBinding="{Binding FullName}" />
                    <GridViewColumn Header="Backup Status" DisplayMemberBinding="{Binding BackupStatus}" />
                    <GridViewColumn Header="Backup Count" DisplayMemberBinding="{Binding Path=Hash.BackupCount}" />
                    <GridViewColumn Header="Node Count" DisplayMemberBinding="{Binding Path=Hash.NodeCount}" />
                    <GridViewColumn Header="Length" DisplayMemberBinding="{Binding Path=Hash.Length}" />
                    <GridViewColumn Header="Creation Time" DisplayMemberBinding="{Binding Path=Hash.CreationTime}" />
                    <GridViewColumn Header="Last Write Time" DisplayMemberBinding="{Binding Path=Hash.LastWriteTime}" />
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
